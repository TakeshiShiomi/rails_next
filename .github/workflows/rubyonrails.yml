# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
# 勉強メモ
# github actionsの設定ファイルは、.github/workflows/ディレクトリに配置する。
# on:
# push:
#   branches: ["main", "develop"]
# pull_request:
#   branches: ["main", "develop"]
# で実行するブランチを指定できる。すべてのブランチで実行する場合はコメントアウトする。
# name: は、GitHub Actionsの画面で表示されるジョブの名前。わかりやすい名前をつけると良い。
# run: は、ジョブの実行内容を記述する。コマンドを記述する。
# on: は、ジョブを実行するタイミングを指定する。push, pull_request, schedule, workflow_dispatch などが指定できる。
# jobs: は、ジョブの設定を記述する。複数のジョブを記述することができる。
# runs-on: は、ジョブを実行する環境を指定する。ubuntu-latest, ubuntu-20.04, ubuntu-18.04, windows-latest, windows-2019, macos-latest, macos-10.15 などが指定できる。
name: "Ruby on Rails CI"
on:
  push:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    env:
      RAILS_ENV: test
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t myapp:latest ./backend
          docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Run tests
        run: docker run --rm -e RAILS_ENV=test -e DATABASE_URL=${{ secrets.DATABASE_URL }} myapp:latest bin/rake

  lint:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Run linters
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/myapp:latest bundle exec bundler-audit check --update
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/myapp:latest bundle exec brakeman -q -w2
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/myapp:latest bundle exec rubocop --parallel
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/myapp:latest bundle exec rspec
